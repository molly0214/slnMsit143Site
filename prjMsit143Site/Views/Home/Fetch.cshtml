
@{
    ViewData["Title"] = "Fetch";
}

<h1>Fetch</h1>
<div class="alert alert-warning" role="alert" id="div1"></div>
<select id="select1"></select>
<img id="img1" width="200" height="180" />

    @section Scripts{
        <script>
        const divMessage = document.querySelector("#div1")
        const imgPhoto = document.querySelector("#img1")
        const selCity = document.querySelector("#select1")
  // console.log(fetch("@Url.Content("~/api/index")"))  //得到的是promise
        @*fetch("@Url.Content("~/api/index")")
            .then(response => {
                console.log(response)
                console.log(response.ok)  //true or false
                console.log(response.status) //200
                console.log(response.headers.get("content-encoding"))
                console.log(response.headers.get("content-type"))
                console.log(response.headers.get("date"))
                console.log(response.body)
               // console.log(response.text())  //得到另一個 promise 物件
                return response.text()
                //console.log
                //確認Server程式執行沒有問題
                //if (response.ok) {
                //} else{
                //    console.log(response.status)
                //}
            })
            .then(data => {
                //data 就是透過 response.text() 傳過來的結果
                console.log(data)
            })
            .catch(err=>console.log(err))*@
           fetch("@Url.Content("~/api/index")")
            .then(response => response.text())
            .then(data => divMessage.textContent = data)
            .catch(err => console.log(err))
        fetch("@Url.Content("~/members/showphoto/3")")
            .then(response => response.blob())
            .then(datas => {
                imgPhoto.src = URL.createObjectURL(datas)
            })
     @*fetch("@Url.Content("~/api/city")")
            .then(response => response.json())
            .then(datas => {
                datas.forEach(city => {
                    const opt = new Option(city, city)
                    selCity.options.add(opt)
                })
            })*@
        async function LoadCities() {
            let response = await fetch("@Url.Content("~/api/city")")
            let datas = await response.json()
            datas.forEach(city => {
                const opt = new Option(city, city)
                selCity.options.add(opt)
            })
        }
        LoadCities()
        </script>
    }